<?xml version="1.0" encoding="utf-8"?>
<Project ToolsVersion="4.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <PropertyGroup>
    <Configuration Condition=" '$(Configuration)' == '' ">Debug</Configuration>
    <Platform Condition=" '$(Platform)' == '' ">x86</Platform>
    <ProductVersion>8.0.30703</ProductVersion>
    <SchemaVersion>2.0</SchemaVersion>
    <ProjectGuid>{1D38E0CF-BF13-4229-860F-3809F39F0892}</ProjectGuid>
    <OutputType>Library</OutputType>
    <AppDesignerFolder>Properties</AppDesignerFolder>
    <RootNamespace>Terraria.Plugins.CoderCow</RootNamespace>
    <AssemblyName>Plugin Common Lib 1.7</AssemblyName>
    <TargetFrameworkVersion>v4.0</TargetFrameworkVersion>
    <TargetFrameworkProfile>
    </TargetFrameworkProfile>
    <FileAlignment>512</FileAlignment>
    <CodeContractsAssemblyMode>1</CodeContractsAssemblyMode>
  </PropertyGroup>
  <PropertyGroup>
    <StartupObject />
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)' == 'Debug|AnyCPU'">
    <DebugSymbols>true</DebugSymbols>
    <OutputPath>bin\Debug\</OutputPath>
    <DefineConstants>DEBUG;TRACE</DefineConstants>
    <DebugType>full</DebugType>
    <PlatformTarget>AnyCPU</PlatformTarget>
    <CodeAnalysisLogFile>bin\Debug\CCPluginsCommon.dll.CodeAnalysisLog.xml</CodeAnalysisLogFile>
    <CodeAnalysisUseTypeNameInSuppression>true</CodeAnalysisUseTypeNameInSuppression>
    <CodeAnalysisModuleSuppressionsFile>GlobalSuppressions.cs</CodeAnalysisModuleSuppressionsFile>
    <ErrorReport>prompt</ErrorReport>
    <CodeAnalysisRuleSet>MinimumRecommendedRules.ruleset</CodeAnalysisRuleSet>
    <CodeAnalysisRuleSetDirectories>;C:\Program Files\Microsoft Visual Studio 10.0\Team Tools\Static Analysis Tools\\Rule Sets</CodeAnalysisRuleSetDirectories>
    <CodeAnalysisRuleDirectories>;C:\Program Files\Microsoft Visual Studio 10.0\Team Tools\Static Analysis Tools\FxCop\\Rules</CodeAnalysisRuleDirectories>
    <CodeAnalysisIgnoreBuiltInRules>true</CodeAnalysisIgnoreBuiltInRules>
    <CodeContractsEnableRuntimeChecking>True</CodeContractsEnableRuntimeChecking>
    <CodeContractsRuntimeOnlyPublicSurface>False</CodeContractsRuntimeOnlyPublicSurface>
    <CodeContractsRuntimeThrowOnFailure>True</CodeContractsRuntimeThrowOnFailure>
    <CodeContractsRuntimeCallSiteRequires>False</CodeContractsRuntimeCallSiteRequires>
    <CodeContractsRuntimeSkipQuantifiers>False</CodeContractsRuntimeSkipQuantifiers>
    <CodeContractsRunCodeAnalysis>False</CodeContractsRunCodeAnalysis>
    <CodeContractsNonNullObligations>False</CodeContractsNonNullObligations>
    <CodeContractsBoundsObligations>False</CodeContractsBoundsObligations>
    <CodeContractsArithmeticObligations>False</CodeContractsArithmeticObligations>
    <CodeContractsEnumObligations>False</CodeContractsEnumObligations>
    <CodeContractsRedundantAssumptions>False</CodeContractsRedundantAssumptions>
    <CodeContractsInferRequires>False</CodeContractsInferRequires>
    <CodeContractsInferEnsures>False</CodeContractsInferEnsures>
    <CodeContractsInferObjectInvariants>False</CodeContractsInferObjectInvariants>
    <CodeContractsSuggestAssumptions>False</CodeContractsSuggestAssumptions>
    <CodeContractsSuggestRequires>True</CodeContractsSuggestRequires>
    <CodeContractsSuggestEnsures>False</CodeContractsSuggestEnsures>
    <CodeContractsSuggestObjectInvariants>False</CodeContractsSuggestObjectInvariants>
    <CodeContractsRunInBackground>True</CodeContractsRunInBackground>
    <CodeContractsShowSquigglies>True</CodeContractsShowSquigglies>
    <CodeContractsUseBaseLine>False</CodeContractsUseBaseLine>
    <CodeContractsEmitXMLDocs>False</CodeContractsEmitXMLDocs>
    <CodeContractsCustomRewriterAssembly />
    <CodeContractsCustomRewriterClass />
    <CodeContractsLibPaths />
    <CodeContractsExtraRewriteOptions />
    <CodeContractsExtraAnalysisOptions />
    <CodeContractsBaseLineFile />
    <CodeContractsCacheAnalysisResults>True</CodeContractsCacheAnalysisResults>
    <CodeContractsRuntimeCheckingLevel>Full</CodeContractsRuntimeCheckingLevel>
    <CodeContractsReferenceAssembly>DoNotBuild</CodeContractsReferenceAssembly>
    <CodeContractsAnalysisWarningLevel>0</CodeContractsAnalysisWarningLevel>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)' == 'Release|AnyCPU'">
    <OutputPath>bin\Release\</OutputPath>
    <DefineConstants>TRACE</DefineConstants>
    <Optimize>true</Optimize>
    <DebugType>pdbonly</DebugType>
    <PlatformTarget>AnyCPU</PlatformTarget>
    <CodeAnalysisLogFile>bin\Release\CCPluginsCommon.dll.CodeAnalysisLog.xml</CodeAnalysisLogFile>
    <CodeAnalysisUseTypeNameInSuppression>true</CodeAnalysisUseTypeNameInSuppression>
    <CodeAnalysisModuleSuppressionsFile>GlobalSuppressions.cs</CodeAnalysisModuleSuppressionsFile>
    <ErrorReport>prompt</ErrorReport>
    <CodeAnalysisRuleSet>MinimumRecommendedRules.ruleset</CodeAnalysisRuleSet>
    <CodeAnalysisRuleSetDirectories>;C:\Program Files\Microsoft Visual Studio 10.0\Team Tools\Static Analysis Tools\\Rule Sets</CodeAnalysisRuleSetDirectories>
    <CodeAnalysisIgnoreBuiltInRuleSets>true</CodeAnalysisIgnoreBuiltInRuleSets>
    <CodeAnalysisRuleDirectories>;C:\Program Files\Microsoft Visual Studio 10.0\Team Tools\Static Analysis Tools\FxCop\\Rules</CodeAnalysisRuleDirectories>
    <CodeAnalysisIgnoreBuiltInRules>true</CodeAnalysisIgnoreBuiltInRules>
    <CodeAnalysisFailOnMissingRules>false</CodeAnalysisFailOnMissingRules>
    <CodeContractsEnableRuntimeChecking>True</CodeContractsEnableRuntimeChecking>
    <CodeContractsRuntimeOnlyPublicSurface>False</CodeContractsRuntimeOnlyPublicSurface>
    <CodeContractsRuntimeThrowOnFailure>True</CodeContractsRuntimeThrowOnFailure>
    <CodeContractsRuntimeCallSiteRequires>False</CodeContractsRuntimeCallSiteRequires>
    <CodeContractsRuntimeSkipQuantifiers>False</CodeContractsRuntimeSkipQuantifiers>
    <CodeContractsRunCodeAnalysis>False</CodeContractsRunCodeAnalysis>
    <CodeContractsNonNullObligations>False</CodeContractsNonNullObligations>
    <CodeContractsBoundsObligations>False</CodeContractsBoundsObligations>
    <CodeContractsArithmeticObligations>False</CodeContractsArithmeticObligations>
    <CodeContractsEnumObligations>False</CodeContractsEnumObligations>
    <CodeContractsRedundantAssumptions>False</CodeContractsRedundantAssumptions>
    <CodeContractsInferRequires>False</CodeContractsInferRequires>
    <CodeContractsInferEnsures>False</CodeContractsInferEnsures>
    <CodeContractsInferObjectInvariants>False</CodeContractsInferObjectInvariants>
    <CodeContractsSuggestAssumptions>False</CodeContractsSuggestAssumptions>
    <CodeContractsSuggestRequires>True</CodeContractsSuggestRequires>
    <CodeContractsSuggestEnsures>False</CodeContractsSuggestEnsures>
    <CodeContractsSuggestObjectInvariants>False</CodeContractsSuggestObjectInvariants>
    <CodeContractsRunInBackground>True</CodeContractsRunInBackground>
    <CodeContractsShowSquigglies>True</CodeContractsShowSquigglies>
    <CodeContractsUseBaseLine>False</CodeContractsUseBaseLine>
    <CodeContractsEmitXMLDocs>False</CodeContractsEmitXMLDocs>
    <CodeContractsCustomRewriterAssembly />
    <CodeContractsCustomRewriterClass />
    <CodeContractsLibPaths />
    <CodeContractsExtraRewriteOptions />
    <CodeContractsExtraAnalysisOptions />
    <CodeContractsBaseLineFile />
    <CodeContractsCacheAnalysisResults>True</CodeContractsCacheAnalysisResults>
    <CodeContractsRuntimeCheckingLevel>Full</CodeContractsRuntimeCheckingLevel>
    <CodeContractsReferenceAssembly>DoNotBuild</CodeContractsReferenceAssembly>
    <CodeContractsAnalysisWarningLevel>0</CodeContractsAnalysisWarningLevel>
  </PropertyGroup>
  <ItemGroup>
    <Reference Include="Mono.Data.Sqlite">
      <HintPath>References\Mono.Data.Sqlite.dll</HintPath>
    </Reference>
    <Reference Include="MySql.Data">
      <HintPath>References\MySql.Data.dll</HintPath>
    </Reference>
    <Reference Include="MySql.Web">
      <HintPath>References\MySql.Web.dll</HintPath>
    </Reference>
    <Reference Include="Newtonsoft.Json">
      <HintPath>References\Newtonsoft.Json.dll</HintPath>
    </Reference>
    <Reference Include="System" />
    <Reference Include="System.Core" />
    <Reference Include="Microsoft.CSharp" />
    <Reference Include="System.Data" />
    <Reference Include="System.Drawing" />
    <Reference Include="System.Xml" />
    <Reference Include="TerrariaServer">
      <HintPath>References\TerrariaServer.exe</HintPath>
    </Reference>
    <Reference Include="TShockAPI">
      <HintPath>References\TShockAPI.dll</HintPath>
    </Reference>
  </ItemGroup>
  <ItemGroup>
    <Compile Include="Hooks\DoorUseEventArgs.cs" />
    <Compile Include="Hooks\PlayerSpawnEventArgs.cs" />
    <Compile Include="_General Exceptions\ChestNotEmptyException.cs" />
    <Compile Include="_General Exceptions\InvalidChestStyleException.cs" />
    <Compile Include="_Threading\AsyncOrderedWorkQueue.cs" />
    <Compile Include="_Threading\WorkItem.cs" />
    <Compile Include="TerrariaItems.cs" />
    <Compile Include="_Enums and Structs\BlockType.cs" />
    <Compile Include="_Enums and Structs\BossType.cs" />
    <Compile Include="_Enums and Structs\ChestKind.cs" />
    <Compile Include="_Enums and Structs\ChestStyle.cs" />
    <Compile Include="_Enums and Structs\Direction.cs" />
    <Compile Include="_Enums and Structs\ItemMetadata.cs" />
    <Compile Include="_Enums and Structs\ItemPrefix.cs" />
    <Compile Include="_Enums and Structs\ItemType.cs" />
    <Compile Include="_Enums and Structs\LiquidKind.cs" />
    <Compile Include="_Interaction\PlayerCommandInteraction.cs" />
    <Compile Include="_Interaction\CommandInteractionResult.cs" />
    <Compile Include="_Enums and Structs\WallType.cs" />
    <Compile Include="_Data\DatabaseHandlerBase.cs" />
    <Compile Include="_Data\MetadataHandlerBase.cs" />
    <Compile Include="_Utility Classes\BoolEx.cs" />
    <Compile Include="_Utility Classes\CollectionEx.cs" />
    <Compile Include="_Utility Classes\FrameTimer.cs" />
    <Compile Include="_Utility Classes\PaginationUtil.cs" />
    <Compile Include="_Utility Classes\Timer.cs" />
    <Compile Include="_Utility Classes\TimerBase.cs" />
    <Compile Include="_Utility Classes\TimerManager.cs" />
    <Compile Include="_Utility Classes\TimeSpanEx.cs" />
    <Compile Include="Collections\PriorityList.cs" />
    <Compile Include="Hooks\BossSpawnEventArgs.cs" />
    <Compile Include="Hooks\ChestModifySlotEventArgs.cs" />
    <Compile Include="Hooks\ItemUpdateEventArgs.cs" />
    <Compile Include="Hooks\ItemOwnerEventArgs.cs" />
    <Compile Include="Hooks\LiquidSetEventArgs.cs" />
    <Compile Include="Hooks\PlayerModifySlotEventArgs.cs" />
    <Compile Include="Hooks\TileLocationEventArgs.cs" />
    <Compile Include="Hooks\NetHookEventArgs.cs" />
    <Compile Include="Hooks\NetHookHandler.cs" />
    <Compile Include="Hooks\SignEditEventArgs.cs" />
    <Compile Include="Hooks\TileEditEventArgs.cs" />
    <Compile Include="Test\AssertException.cs" />
    <Compile Include="Test\TAssert.cs" />
    <Compile Include="IMetadataFile.cs" />
    <Compile Include="PluginInfo.cs" />
    <Compile Include="PluginTrace.cs" />
    <Compile Include="_Utility Classes\PointEx.cs" />
    <Compile Include="Properties\AssemblyInfo.cs" />
    <Compile Include="Collections\SerializableDictionary.cs" />
    <Compile Include="_Enums and Structs\StatueStyle.cs" />
    <Compile Include="Collections\StringCollection.cs" />
    <Compile Include="Terraria.cs" />
    <Compile Include="Terraria.ObjectMeasureData.cs">
      <DependentUpon>Terraria.cs</DependentUpon>
    </Compile>
    <Compile Include="_Enums and Structs\TileEditType.cs" />
    <Compile Include="_Utility Classes\TShockEx.cs" />
    <Compile Include="_Interaction\UserInteractionHandlerBase.cs" />
    <Compile Include="_Data\WorldMetadataHandlerBase.cs" />
    <Compile Include="Test\TestContext.cs" />
    <Compile Include="Test\TestDelay.cs" />
    <Compile Include="Test\TestRunData.cs" />
    <Compile Include="Test\TestRunnerBase.cs" />
    <Compile Include="TerrariaTiles.cs" />
    <Compile Include="_General Exceptions\InvalidBlockTypeException.cs" />
    <Compile Include="_General Exceptions\LimitEnforcementException.cs" />
    <Compile Include="_General Exceptions\MissingPermissionException.cs" />
    <Compile Include="_General Exceptions\PlayerNotLoggedInException.cs" />
    <Compile Include="_General Exceptions\TileProtectedException.cs" />
  </ItemGroup>
  <ItemGroup>
    <Content Include="License.txt" />
  </ItemGroup>
  <Import Project="$(MSBuildToolsPath)\Microsoft.CSharp.targets" />
  <PropertyGroup>
    <PostBuildEvent>
    </PostBuildEvent>
  </PropertyGroup>
  <!-- To modify your build process, add your task inside one of the targets below and uncomment it. 
       Other similar extension points exist, see Microsoft.Common.targets.
  <Target Name="BeforeBuild">
  </Target>
  <Target Name="AfterBuild">
  </Target>
  -->
</Project>